Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

 

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false
 

Constraints:

0 <= s.length <= 100
0 <= t.length <= 104
s and t consist only of lowercase English letters.

#Solution

class Solution {
    public boolean isSubsequence(String s, String t) {
        if(s.length() == 0){return true;}
        StringBuilder sub = new StringBuilder();
        int slow = 0 ,fast = 0;
        while(slow<s.length() && fast<t.length()){
            if(s.charAt(slow) == t.charAt(fast)){
                sub.append(s.charAt(slow));
                slow++;
            }
            fast++;
        }
        return sub.toString().equals(s);
    }
}
