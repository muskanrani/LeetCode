You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

#Solution

class Solution {
    public boolean halvesAreAlike(String s) {
        int cnt1 = 0, cnt2 = 0;
        for(int i =0; i<s.length()/2;i++){
            if(isVowel(s.charAt(i))){
                cnt1++;
            }
        }
         for(int i =s.length()/2; i<s.length();i++){
            if(isVowel(s.charAt(i))){
                cnt2++;
            }
        }
        if(cnt1 == cnt2){
            return true;
        }
        return false;
    }
    public boolean isVowel(char v){
        List<Character> vowel = Arrays.asList('a','e','i','o','u','A','E','I','O','U');
        if(vowel.contains(v)){
            return true;
        }
        else{
            return false;
        }
    }
}
