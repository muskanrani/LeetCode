Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:


Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]
Example 2:


Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
 

Constraints:

m == matrix.length
n == matrix[0].length
1 <= m, n <= 200
-231 <= matrix[i][j] <= 231 - 1
 

Follow up:

A straightforward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?

#Solution1
class Solution {
    public void setZeroes(int[][] matrix) {
        boolean[] row = new boolean[matrix.length];
        boolean[] col = new boolean[matrix[0].length];
        Arrays.fill(row,false);
        Arrays.fill(col,false);
        for(int m = 0; m<matrix.length ; m++){
            for(int n=0; n<matrix[0].length ; n++){
                if(matrix[m][n]==0){
                    row[m] = true;
                    col[n] = true;
                }
            }
        }
        for(int m = 0; m<matrix.length ; m++){
            for(int n=0; n<matrix[0].length ; n++){
                if(row[m] == true || col[n] == true){
                    matrix[m][n]=0;
                }
            }
        }
    }
}

#To reduce the space complexity we will use first row and column as the two array we were using earlier.
#Solution2

class Solution {
    public void setZeroes(int[][] matrix) {
        int col = 1;
        for(int m = 0; m<matrix.length ; m++){
            if(matrix[m][0]==0){col=0;}
            for(int n=1; n<matrix[0].length ; n++){
                if(matrix[m][n]==0){
                    matrix[m][0] = matrix[0][n] = 0;
                }
            }
        }
        for(int m = matrix.length-1; m>=0 ; m--){
            for(int n=matrix[0].length-1; n>=1 ; n--){
                if(matrix[m][0] == 0 || matrix[0][n]==0){
                    matrix[m][n]=0;
                }
            }
            if(col == 0){matrix[m][0]=0;}
        }
    }
}
